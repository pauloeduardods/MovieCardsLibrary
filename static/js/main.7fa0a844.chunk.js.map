{"version":3,"sources":["components/Header.jsx","components/Carousel.jsx","components/Rating.jsx","components/MovieCard.jsx","components/MovieList.jsx","data.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","React","Component","Carousel","movies","this","props","id","data-bs-ride","map","movie","index","type","data-bs-target","data-bs-slide-to","aria-current","aria-label","createButton","image","imagePath","title","subtitle","src","alt","createCarouselItem","data-bs-slide","aria-hidden","Rating","rating","MovieCard","storyline","MovieList","key","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7fa0a844.chunk.js","sourcesContent":["import React from 'react';\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <header className=\"navbar navbar-light bg-dark\">\n        <h1 className=\"h4 font-weight-bold\">Movie Cards Library</h1>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction createButton(index) {\n  return (\n    <button\n      type=\"button\"\n      data-bs-target=\"#carouselBest\"\n      data-bs-slide-to={ index }\n      className=\"active\"\n      aria-current=\"true\"\n      aria-label={ `Slide ${index + 1}` }\n    />\n  );\n}\n\nfunction createCarouselItem({ imagePath: image, title, subtitle }, index) {\n  let className = 'carousel-item';\n  if (index === 0) className += ' active';\n  return (\n    <div className={ className }>\n      <img src={ image } className=\"d-block w-100\" alt={ `Title: ${title}` } />\n      <div className=\"carousel-caption d-none d-md-block\">\n        <h5>{title}</h5>\n        <p>{subtitle}</p>\n      </div>\n    </div>\n  );\n}\n\nclass Carousel extends React.Component {\n  render() {\n    const { movies } = this.props;\n    return (\n      <div\n        id=\"carouselBest\"\n        className=\"carousel slide carousel-size\"\n        data-bs-ride=\"carousel\"\n      >\n        <div className=\"carousel-indicators\">\n          { movies.map((movie, index) => createButton(index)) }\n        </div>\n        <div className=\"carousel-inner carousel-size\">\n          { movies.map((movie, index) => createCarouselItem(movie, index)) }\n        </div>\n        <button\n          className=\"carousel-control-prev\"\n          type=\"button\"\n          data-bs-target=\"#carouselBest\"\n          data-bs-slide=\"prev\"\n        >\n          <span className=\"carousel-control-prev-icon\" aria-hidden=\"true\" />\n          <span className=\"visually-hidden\">Previous</span>\n        </button>\n        <button\n          className=\"carousel-control-next\"\n          type=\"button\"\n          data-bs-target=\"#carouselBest\"\n          data-bs-slide=\"next\"\n        >\n          <span className=\"carousel-control-next-icon\" aria-hidden=\"true\" />\n          <span className=\"visually-hidden\">Next</span>\n        </button>\n      </div>\n    );\n  }\n}\n\nCarousel.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.shape({\n    title: PropTypes.string,\n    subtitle: PropTypes.string,\n    imagePath: PropTypes.string,\n  }))).isRequired,\n};\n\nexport default Carousel;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Rating extends React.Component {\n  render() {\n    const { rating } = this.props;\n    return (\n      <section className=\"col-3\">\n        <p className=\"rating \">\n          <i className=\"fas fa-star pl-3\" />\n          {rating}\n        </p>\n      </section>\n    );\n  }\n}\n\nRating.propTypes = {\n  rating: PropTypes.number.isRequired,\n};\n\nexport default Rating;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Rating from './Rating';\n\nclass MovieCard extends React.Component {\n  render() {\n    const { movie } = this.props;\n    const { title, subtitle, imagePath, storyline, rating } = movie;\n    return (\n      <div className=\"col-lg-6 col-sm-12 px-0 my-2 bg-dark\">\n        <div className=\"mx-2 border border-3 card-border-color rounded movie-card-item\">\n          <img\n            src={ imagePath }\n            alt={ `${title}-${subtitle}` }\n            className=\"movie-image rounded mb-2\"\n          />\n          <hr className=\"card-hr\" />\n          <h4 className=\"h4 title-subtitle my-1 mx-4\">{title}</h4>\n          <div className=\"row justify-content-end\">\n            <div className=\"col-9\">\n              <h5 className=\"h6 title-subtitle my-1 mx-4 text-start\">{subtitle}</h5>\n            </div>\n            <Rating rating={ rating } />\n          </div>\n          <p className=\"movie-card-storyline p-2\">{storyline}</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nMovieCard.propTypes = {\n  movie: PropTypes.objectOf(PropTypes.shape({\n    title: PropTypes.string,\n    subtitle: PropTypes.string,\n    imagePath: PropTypes.string,\n    storyline: PropTypes.string,\n    rating: PropTypes.number,\n  })).isRequired,\n};\n\nexport default MovieCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MovieCard from './MovieCard';\n\nclass MovieList extends React.Component {\n  render() {\n    const { movies } = this.props;\n    return (\n      <section className=\"container mt-4\">\n        <p className=\"h5 text-center my-3\">Movie List</p>\n        <div className=\"row\">\n          {movies.map((movie, index) => (\n            <MovieCard key={ `Movie Title ${index + 1}` } movie={ movie } />))}\n        </div>\n      </section>\n    );\n  }\n}\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default MovieList;\n","const movies = [\n  {\n    title: 'Kingsglaive',\n    subtitle: 'Final Fantasy XV',\n    storyline: 'King Regis, who oversees the land of Lucis, commands his army of soldiers to protect the kingdom from the Niflheim empire\\'s plans to steal the sacred crystal.',\n    rating: 4.5,\n    imagePath: 'images/Kingsglaive_Final_Fantasy_XV.jpg',\n  },\n  {\n    title: 'Final Fantasy',\n    subtitle: 'Spirits Within',\n    storyline: 'A scientist makes a last stand on Earth with the help of a ragtag team of soldiers against an invasion of alien phantoms.',\n    rating: 4.5,\n    imagePath: 'images/Final_Fantasy_Spirits_Within.jpg',\n  },\n  {\n    title: 'Ghost In The Shell',\n    subtitle: 'Ghost In The Shell',\n    storyline: 'A hacker known as the Puppet Master is hunted by a female cyborg cop and her partner. This film is a revised version of Ghost in the Shell (1995).',\n    rating: 5,\n    imagePath: 'images/Ghost_In_The_Shell_2_0.jpg',\n  },\n  {\n    title: 'Appleseed Alpha',\n    subtitle: 'Appleseed Alpha',\n    storyline: 'A young female soldier Deunan and her cyborg partner Briareos survive through the post World War 3 apocalyptic New York in search of human\\'s future hope, the legendary city of Olympus.',\n    rating: 3.8,\n    imagePath: 'images/Appleseed_Alpha.jpg',\n  },\n  {\n    title: 'Resident Evil',\n    subtitle: 'Vendetta',\n    storyline: 'Chris Redfield enlists the help of Leon S. Kennedy and Rebecca Chambers to stop a death merchant, with a vengeance, from spreading a deadly virus in New York.',\n    rating: 4.2,\n    imagePath: 'images/Resident_Evil_Vendetta.jpg',\n  },\n];\n\nexport default movies;\n","import React from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport Carousel from './components/Carousel';\nimport MovieList from './components/MovieList';\nimport movies from './data';\n\nfunction App() {\n  return (\n    <div className=\"App bg-dark text-white\">\n      <Header />\n      <Carousel movies={ movies } />\n      <MovieList movies={ movies } />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}